source ~/.vimrc
set clipboard+=unnamed
set clipboard+=ideaput
set virtualedit=onemore
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

""" Map leader to space ---------------------
let mapleader=" "

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

set number
set relativenumber

" Don't use Ex mode, use Q for formatting.
map Q gq

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
" vim-surround
Plug 'tpope/vim-surround'

Plug 'easymotion/vim-easymotion'
Plug 'machakann/vim-highlightedyank'
Plug 'dbakker/vim-paragraph-motion'
Plug 'michaeljsmith/vim-indent-object'

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
if has('ide')
    "" Map \r to the Reformat Code action
    " map \r <Action>(ReformatCode)

    "" Map <leader>d to start debug
    map <leader>d <Action>(Debug)

    "" Map \b to toggle the breakpoint on the current line
    "map \b <Action>(ToggleLineBreakpoint)

    "" map leader r to rename
    "map <leader>r r <Action>(RenameElement)

    map <leader>fo <Action>(RecentChangedFiles)
    map <leader>fr <Action>(RecentFiles)
    map <leader>ff <Action>(SearchEverywhere)
    map <leader>b <Action>(Switcher)

    " Reformat the current line only
    map <leader>l V<Action>(ReformatCode)

    "" show File Members
    map <leader>m <Action>(FileStructurePopup)
    
    """ Navigate methods
    map [[ <Action>(MethodUp)
    map ]] <Action>(MethodDown)

    " Navigate action mappings
    nmap <leader>r <Action>(Refactorings.QuickListPopupAction)
    xmap <leader>r <Action>(Refactorings.QuickListPopupAction)
    
    nmap <leader>h <Action>(HighlightUsagesInFile)
    nmap <leader>n <Action>(ReSharperNavigateTo)
    nnoremap gi :action ReSharperGotoImplementation<CR>
    nmap <leader>p <Action>(ParameterInfo)
    nmap <leader>i <Action>(QuickImplementations)
    nmap <leader>i <Action>(QuickImplementations)
    
    nmap <C-j> <Action>(MoveLineDown)
    xmap <C-j> <Action>(MoveLineDown)
    nmap <C-k> <Action>(MoveLineUp)
    xmap <C-k> <Action>(MoveLineUp)
    
    " Hide All Windows
    nnoremap <c-x> :action HideAllWindows<CR>
    map <c-z> <Action>(ToggleDistractionFreeMode)
    map <leader>lh <Action>(LocalHistory.ShowHistory)
endif

"" Exit insert mode 
inoremap C-c <ESC>

" Quick yanking to the end of the line
nnoremap Y y$

" Use the damn hjkl keys - disables the arrow keys in insert and normal modes
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Quote words under cursor
nnoremap <leader>" viW<esc>a"<esc>gvo<esc>i"<esc>gvo<esc>3l
nnoremap <leader>' viW<esc>a'<esc>gvo<esc>i'<esc>gvo<esc>3l

" Quote current selection
" TODO: This only works for selections that are created "forwardly"
vnoremap <leader>" <esc>a"<esc>gvo<esc>i"<esc>gvo<esc>ll
vnoremap <leader>' <esc>a'<esc>gvo<esc>i'<esc>gvo<esc>ll

nnoremap <leader>w :w<CR>
" inoremap <leader>w :w<CR>
nnoremap <leader>q :q<cr>
